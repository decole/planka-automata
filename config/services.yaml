# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  App\Feature\ApiIntegration\Service\PlankaApiIntegrator:
    arguments:
      $user: '%env(PLANKA_USER)%'
      $password: '%env(PLANKA_PASSWORD)%'
      $uri: '%env(PLANKA_URI)%'
      $port: '%env(PLANKA_PORT)%'

  App\Feature\AutoNumerator\Service\AutoNumerateCardService:
    arguments:
      $boardId: '%env(PLANKA_BOARD_ID)%'
      $cardPrefix: '%env(PLANKA_NUMERICAL_TEMPLATE)%'
      $numerateLabelId: '%env(PLANKA_NUMERICAL_LABEL_ID)%'
      $bugfixLabelId: '%env(PLANKA_BUGFIX_LABEL_ID)%'
      $isEnable: '%env(bool:IS_ENABLE_FEATURE_AUTO_NUMERATOR)%'
      $logger: '@monolog.logger.cards_action'

  App\Feature\DragFinishCardToArchiveBoard\Service\DragFinishCardToArchiveBoardService:
    arguments:
      $boardId: '%env(PLANKA_BOARD_ID)%'
      $archiveBoardId: '%env(PLANKA_ARCHIVE_BOARD_ID)%'
      $archiveBoardListId: '%env(PLANKA_ARCHIVE_LIST_ID)%'
      $targetBoardListId: '%env(PLANKA_ARCHIVE_TARGET_LIST_ID)%'
      $daysBeforeTransfer: '%env(int:PLANKA_ARCHIVE_DAYS_BEFORE_TRANSFER)%'
      $isEnable: '%env(bool:IS_ENABLE_FEATURE_DRAG_FINISH_CARD_TO_ARCHIVE_BOARD)%'
      $logger: '@monolog.logger.cards_action'

  App\Feature\SentryWebhook\Service\SentryIssueSaveService:
    arguments:
      $isEnable: '%env(bool:IS_ENABLE_FEATURE_SENTRY_ISSUE_CARD)%'
      $boardId: '%env(PLANKA_BOARD_ID)%'
      $boardListId: '%env(PLANKA_ACTIVE_TARGET_LIST_ID)%'

  App\Feature\SentryWebhook\Service\CreateBugfixCardService:
    arguments:
      $isEnable: '%env(bool:IS_ENABLE_FEATURE_SENTRY_ISSUE_CARD)%'
      $bugfixLabelId: '%env(PLANKA_BUGFIX_LABEL_ID)%'
      $logger: '@monolog.logger.cards_action'

  App\Feature\DeadLineNotify\Service\DeadLineNotifyService:
    $isEnable: '%env(bool:IS_ENABLE_FEATURE_NOTIFY_DEADLINE_CARD_CARD)%'
    $timezone: '%env(APP_TIMEZONE)%'
    $message: '%env(DUE_TELEGRAM_MESSAGE)%'
    $host: '%env(PLANKA_URI)%'
    $logger: '@monolog.logger.cards_action'

  App\Feature\TelegramNotify\Service\TelegramNotifyService:
    arguments:
      $apiKey: '%env(TELEGRAM_BOT_TOKEN)%'
      $botName: '%env(TELEGRAM_BOT_NAME)%'
